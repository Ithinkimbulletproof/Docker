services:
  web:
    build: .
    command: >
      bash -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env.prod
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    env_file:
      - .env.prod

  celery:
    build: .
    command: >
      bash -c "celery -A config.celery  worker --loglevel=INFO -B"
    env_file:
      - .env.prod
    depends_on:
      - redis
      - db

  celery_beat:
    build: .
    env_file:
      - .env.prod
    command: >
      bash -c "celery -A config beat --loglevel=info"
    depends_on:
      - redis
      - db

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: